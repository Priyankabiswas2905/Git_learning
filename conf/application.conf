# This is the main configuration file for the application.
# ~~~~~

# Host machine IP to connect from outside
hostIp = "localhost"

# Disable plugins we don't need
dbplugin = disabled
evolutionplugin = disabled
ehcacheplugin = enabled


# Configuration file for securesocial
include "securesocial.conf"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="tZ8tQPGe3_QI6ZtSDNs;/4O:F:cIk15fy2R^5HiT;TY?31K59WuwYvAa;I8b/0J9"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Where to store files on disk
files.path = /tmp/medici
queries.path=/tmp/medici

# Where to store the data (right now mongodb)
# see http://www.mongodb.org/display/DOCS/Connections
# mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]
mongodb.default = "mongodb://127.0.0.1:27017/test"

# Settings for the PostgreSQL
#postgres.user=medici
#postgres.password=postgresPassword

# RabbitMQ
rabbitmq.host=localhost
rabbitmq.exchange=medici
#rabbitmq.user=medici
#rabbitmq.password=mediciPassword

#RabbitMQ SSL (using a trust manager-trust store and authenticating is optional)
rabbitmq.useSSL=true
rabbitmq.trustStorePath="C:\\rabbitmqKeys\\keystoreRabbitmq"
rabbitmq.trustStoreType="JKS"
rabbitmq.trustStorePassphrase="9Sju!#lE"

#Versus
versus.host="http://localhost:8080/api/v1"
versus.client="http://localhost:9000"

#Intermediate extractor results cleanup time params (in hours)
intermediateCleanup.checkEvery=1
intermediateCleanup.removeAfter=24



#modules communications key
commKey=r1ek3rs


# Content types
mimetype.ptm=application/x-ptm
mimetype.PTM=application/x-ptm
mimetype.obj=model/obj
mimetype.OBJ=model/obj
mimetype.x3d=model/x3d-xml
mimetype.X3D=model/x3d-xml
mimetype.x3db=model/x3d-binary
mimetype.X3DB=model/x3d-binary
mimetype.ply=model/ply
mimetype.PLY=model/ply
mimetype.mtl=model/mtl
mimetype.MTL=model/mtl
mimetype.cnv=application/cnv
mimetype.CNV=application/cnv
mimetype.oni=application/oni
mimetype.ONI=application/oni
mimetype.oniv=text/oni-view
mimetype.ONIV=text/oni-view
mimetype.imageurl=image/previewUrl
mimetype.IMAGEURL=image/previewUrl
mimetype.ptmmaps=text/ptm-maps
mimetype.PTMMAPS=text/ptm-maps
mimetype.3ds=application/x-3ds
mimetype.3DS=application/x-3ds
mimetype.max=application/x-3ds
mimetype.MAX=application/x-3ds
mimetype.dae=model/collada-xml
mimetype.DAE=model/collada-xml
mimetype.cad=model/cad
mimetype.CAD=model/cad
mimetype.multispectral=image/multispectral
mimetype.MULTISPECTRAL=image/multispectral
mimetype.ptmfromimages=application/ptmfromimages
mimetype.PTMFROMIMAGES=application/ptmfromimages
mimetype.objfromptm=application/objfromptm
mimetype.OBJFROMPTM=application/objfromptm
mimetype.webm=video/webm
mimetype.WEBM=video/webm
mimetype.presentation=video/presentation
mimetype.PRESENTATION=video/presentation
mimetype.videoalternativeslist=video/videoalternativeslist
mimetype.VIDEOALTERNATIVESLIST=video/videoalternativeslist
mimetype.iframe=text/iframe
mimetype.IFRAME=text/iframe

# Raw image formats
mimetype.3fr=image/raw
mimetype.ari=image/raw
mimetype.arw=image/raw
mimetype.bay=image/raw
mimetype.crw=image/raw
mimetype.cr2=image/raw
mimetype.cap=image/raw
mimetype.dcs=image/raw
mimetype.dcr=image/raw
mimetype.dng=image/raw
mimetype.drf=image/raw
mimetype.eip=image/raw
mimetype.erf=image/raw
mimetype.fff=image/raw
mimetype.iiq=image/raw
mimetype.k25=image/raw
mimetype.kdc=image/raw
mimetype.mdc=image/raw
mimetype.mef=image/raw
mimetype.mos=image/raw
mimetype.mrw=image/raw
mimetype.nef=image/raw
mimetype.nrw=image/raw
mimetype.obm=image/raw
mimetype.orf=image/raw
mimetype.pef=image/raw
mimetype.ptx=image/raw
mimetype.pxn=image/raw
mimetype.r3d=image/raw
mimetype.raf=image/raw
mimetype.raw=image/raw
mimetype.rw1=image/raw
mimetype.rw2=image/raw
mimetype.rwz=image/raw
mimetype.sr2=image/raw
mimetype.srf=image/raw
mimetype.srw=image/raw
mimetype.x3f=image/raw

mimetype.3FR=image/raw
mimetype.ARI=image/raw
mimetype.ARW=image/raw
mimetype.BAY=image/raw
mimetype.CRW=image/raw
mimetype.CR2=image/raw
mimetype.CAP=image/raw
mimetype.DCS=image/raw
mimetype.DCR=image/raw
mimetype.DNG=image/raw
mimetype.DRF=image/raw
mimetype.EIP=image/raw
mimetype.ERF=image/raw
mimetype.FFF=image/raw
mimetype.IIQ=image/raw
mimetype.K25=image/raw
mimetype.KDC=image/raw
mimetype.MDC=image/raw
mimetype.MEF=image/raw
mimetype.MOS=image/raw
mimetype.MRW=image/raw
mimetype.NEF=image/raw
mimetype.NRW=image/raw
mimetype.OBM=image/raw
mimetype.ORF=image/raw
mimetype.PEF=image/raw
mimetype.PTX=image/raw
mimetype.PXN=image/raw
mimetype.R3D=image/raw
mimetype.RAF=image/raw
mimetype.RAW=image/raw
mimetype.RW1=image/raw
mimetype.RW2=image/raw
mimetype.RWZ=image/raw
mimetype.SR2=image/raw
mimetype.SRF=image/raw
mimetype.SRW=image/raw
mimetype.X3F=image/raw


# API documentation using Swagger
api.version="0.1"
swagger.api.basepath="http://localhost:9000"
swagger.security.filter="security.AuthorizationFilter"

#Dumps variables
#For both files and datasets, there MUST be a directory to copy the files initially to. Optionally, another directory to move them to
#(by renaming) after they are copied
filedump.dir="C:\\mongodumpfiles"
#filedump.dir="/var/tmp/medici/mongodumpfiles"
filedumpmove.dir="C:\\mongodumpfilesmove"
#filedumpmove.dir="/var/tmp/medici/mongodumpfilesmove"

datasetdump.dir="C:\\mongodumpdatasets"
#datasetdump.dir="/var/tmp/medici/mongodumpdatasets"
datasetdumpmove.dir="C:\\mongodumpdatasetsmove"
#datasetdumpmove.dir="/var/tmp/medici/mongodumpdatasetsmove"

#Dump every how many days (if the associated autodumper plugin is activated)
filemetadatadump.dumpEvery=1
datasetmetadatadump.dumpEvery=1
datasetdump.dumpEvery=1


#RDF metadata export variables
#Dircount is the number of mappings to use. Each schema path follows, defined as filesxmltordfmapping.dir_<schema number> or datasetsxmltordfmapping.dir_<schema number>
#First schema is also used for generating RDF metadata to upload to a communicating RDF store, if such is used
filesxmltordfmapping.dircount = "1"
filesxmltordfmapping.dir_1="conf\\fileUserMetadataRDFMapping.xml"

datasetsxmltordfmapping.dircount = "1"
datasetsxmltordfmapping.dir_1="conf\\datasetUserMetadataRDFMapping.xml"

rdfdumptemporary.dir="C:\\rdfdumptemporaryfiles"
#rdfdumptemporary.dir="/var/tmp/medici/rdfdumptemporaryfiles"

#Community-generated metadata temp exports cleanup time params (in minutes)
rdfTempCleanup.checkEvery=30
rdfTempCleanup.removeAfter=5

#RDF store and SPARQL stuff
userdfSPARQLStore="no"
rdfEndpoint="http://medici-dev.cyi.ac.cy:10100"
rdfXMLGraphName="http://medici-dev.cyi.ac.cy/xmlRDF"
rdfCommunityGraphName="http://medici-dev.cyi.ac.cy/usersRDF"
rootNodesFile="conf\\rdfRootNodes.txt"
datasetRootNodesFile="conf\\datasetRdfRootNodes.txt"
#RDF store update interval (in hours)
rdfRepoUpdate.updateEvery=24

#Initial admins of app
initialAdmins="c.sophocleous@cyi.ac.cy"


#FB stuff
fb.appSecret="e0fac7025e7ba8d09dd60be33eb420a8"
fb.appId="440622909398412"
fb.visibleName="Medici 2"
#fb.visibleLink="http://localhost:9000"
#fb.visiblePic="http://www.cyi.ac.cy/images/CyI-logo-web-transparent-white.png"
#FB users authentication tokens renewal interval (in days)
fb.checkAndRemoveExpired.every=2


#Elasticsearch stuff
elasticsearchSettings.clusterName="medici"
elasticsearchSettings.serverAddress="127.0.0.1"
elasticsearchSettings.serverPort=9300

# JSON2CSV configuration
json2csv.ignore="type,geometry|type"
json2csv.hideprefix=true
json2csv.seperator=|
json2csv.fixgeometry=true
